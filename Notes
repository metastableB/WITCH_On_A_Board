===============================================================================
									Notes
===============================================================================

# Dekatron Stores
Since a lot of the things are going to change as it seems in process of 
development, just start making things, commit whenever something fits,
remove if it doesn't. Just make sure the model you follow allows for 
additions as much as possible.

# Shift circuit
The accumulator  is made up of two dekatron stores. Its length out to be
18 but only 15 is used. The sign bit of both the dekatron holds the same
sign. That makes it 16.

In the shift circuit mechanism only the magnitude part is involved.
The sign part is not involved. The WITCH allows one left shift and 7
right shift. Basically the shift circuit is a set of relay switch mechanism
which controls the trafic from the sending dekatron to the receiving dekatron.
There is no actual shift happening as we see it now.

Model this using 18 dekatrons as relay lines. The getter will receive the value to use to shift this to
the receiver will index the appropriate lines out from this. Being the dekatron store or the accumulator

# Multiplication algorithm

Order : opcode-multiplicand - multiplier 
	
Algorithm :
	If multiplier is positive :
		For each digit of the multiplier taken from left to right (current digit being i in [1,8])
			while (digit > 0)
				Add the multiplicand to the accm shifted i times 
				Decrement the digit

# Accumulator Mappings hardware vs user 
Accumulator made up of two stores A and B. We need 15 digits to multiply TWO EIGHT DIGIT MAGNITUDES and set the sign afterwards.
The accumulator A and B, store0 (MSBs) are set to the sign bits. For accumulator A stores 1-8 are used for digits 1-8. 
In accumulator B, digits 1-7 are used for digits 1-7. 8 it seems is not involved.

Though this is implemented in the base class, the user should know the accumulator as a single object with 15 + 1 (sign) bits
He should be able to index from 0-15 seamlessly.




